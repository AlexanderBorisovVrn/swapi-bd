[{"D:\\REACT\\my-app\\swapi-bd\\src\\index.js":"1","D:\\REACT\\my-app\\swapi-bd\\src\\App.js":"2","D:\\REACT\\my-app\\swapi-bd\\src\\components\\header\\header.js":"3","D:\\REACT\\my-app\\swapi-bd\\src\\components\\random-planet\\random-planet.js":"4","D:\\REACT\\my-app\\swapi-bd\\src\\components\\Swapi-Service\\SwapiService.js":"5","D:\\REACT\\my-app\\swapi-bd\\src\\components\\spinner\\spinner.js":"6","D:\\REACT\\my-app\\swapi-bd\\src\\components\\error\\error.js":"7","D:\\REACT\\my-app\\swapi-bd\\src\\components\\error-button\\error-button.js":"8","D:\\REACT\\my-app\\swapi-bd\\src\\components\\item-list\\item-list.js":"9","D:\\REACT\\my-app\\swapi-bd\\src\\components\\row\\row.js":"10","D:\\REACT\\my-app\\swapi-bd\\src\\components\\error-boundry\\error-boundry.js":"11","D:\\REACT\\my-app\\swapi-bd\\src\\components\\item-details\\item-details.js":"12"},{"size":150,"mtime":1607366019719,"results":"13","hashOfConfig":"14"},{"size":2086,"mtime":1609785117970,"results":"15","hashOfConfig":"14"},{"size":555,"mtime":1607453770978,"results":"16","hashOfConfig":"14"},{"size":2152,"mtime":1609344588298,"results":"17","hashOfConfig":"14"},{"size":2528,"mtime":1609701958162,"results":"18","hashOfConfig":"14"},{"size":393,"mtime":1608134280987,"results":"19","hashOfConfig":"14"},{"size":407,"mtime":1609060890307,"results":"20","hashOfConfig":"14"},{"size":363,"mtime":1609171988875,"results":"21","hashOfConfig":"14"},{"size":968,"mtime":1609353606272,"results":"22","hashOfConfig":"14"},{"size":342,"mtime":1609344109529,"results":"23","hashOfConfig":"14"},{"size":437,"mtime":1609342047054,"results":"24","hashOfConfig":"14"},{"size":2032,"mtime":1609784076362,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1c334tt",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"D:\\REACT\\my-app\\swapi-bd\\src\\index.js",[],["53","54"],"D:\\REACT\\my-app\\swapi-bd\\src\\App.js",["55","56"],"import React, {Component} from 'react';\r\nimport './app.css';\r\nimport Header from './components/header/header';\r\nimport SwapiService from './components/Swapi-Service/SwapiService';\r\nimport RandomPlanet from './components/random-planet/random-planet';\r\nimport ItemDetails, {Record} from './components/item-details/item-details'\r\nimport ItemList from './components/item-list/item-list';\r\nimport Row from './components/row/row'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    itemId: 13\r\n  }\r\n  onItemSelected = (id) => {\r\n    return this.setState({itemId: id})\r\n  }\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  render() {\r\n    const {\r\n      getPerson,\r\n      getAllPeople,\r\n      getPersonUrl,\r\n      getAllStarships,\r\n      getStarshipUrl,\r\n      getStarship\r\n    } = this.swapiService;\r\n    const personList = (\r\n      <ItemList onItemSelected={this.onItemSelected} getData={getAllPeople}>\r\n        {(i) => `${i.name} ( ${i.birthYear})`}\r\n      </ItemList>\r\n    );\r\n    const starshipsList = (\r\n      <ItemList onItemSelected={this.onItemSelected} getData={getAllStarships}>\r\n        {(i) => `${i.name} ( ${i.model})`}\r\n      </ItemList>\r\n    );\r\n    const personDetails = (\r\n      <ItemDetails\r\n        itemId={this.state.itemId}\r\n        getData={getPerson}\r\n        getImageUrl={getPersonUrl}>\r\n        <Record field='gender' label='Gender'/>\r\n        <Record field='birthYear' label='Birth Year'/>\r\n        <Record field='eyeColor' label='Eye color'/>\r\n      </ItemDetails>\r\n    )\r\n    const starshipDetails = (\r\n      <ItemDetails\r\n        itemId={this.state.itemId}\r\n        getData={getStarship}\r\n        getImageUrl={getStarshipUrl}>\r\n        <Record field='model' label='Model'/>\r\n        <Record field='manufacturer' label='Manufacturerr'/>\r\n        <Record field='costInCredits' label='Cost In Credits'/>\r\n        <Record field='crew' label='Crew'/>\r\n      </ItemDetails>\r\n    )\r\n\r\n    return (\r\n      <div className='app'>\r\n        <Header/>\r\n        <RandomPlanet/>\r\n        <Row left={personDetails} right={starshipDetails}/>\r\n      </div>\r\n    )\r\n  }\r\n}","D:\\REACT\\my-app\\swapi-bd\\src\\components\\header\\header.js",[],"D:\\REACT\\my-app\\swapi-bd\\src\\components\\random-planet\\random-planet.js",[],"D:\\REACT\\my-app\\swapi-bd\\src\\components\\Swapi-Service\\SwapiService.js",[],"D:\\REACT\\my-app\\swapi-bd\\src\\components\\spinner\\spinner.js",[],"D:\\REACT\\my-app\\swapi-bd\\src\\components\\error\\error.js",[],"D:\\REACT\\my-app\\swapi-bd\\src\\components\\error-button\\error-button.js",[],"D:\\REACT\\my-app\\swapi-bd\\src\\components\\item-list\\item-list.js",[],"D:\\REACT\\my-app\\swapi-bd\\src\\components\\row\\row.js",[],"D:\\REACT\\my-app\\swapi-bd\\src\\components\\error-boundry\\error-boundry.js",[],"D:\\REACT\\my-app\\swapi-bd\\src\\components\\item-details\\item-details.js",["57","58"],"import React, {Component} from 'react';\r\nimport './item-details.css'\r\nimport Spinner from '../spinner/spinner';\r\n\r\nconst Record = ({item, field, label}) => {\r\n  return (\r\n    <li className='item-details-item'>\r\n      <span>{label}</span>\r\n      <span>{item[field]}</span>\r\n    </li>\r\n  )\r\n}\r\nexport {Record};\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n  state = {\r\n    item: null,\r\n    error: false,\r\n    loading: true,\r\n    image: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateItem();\r\n  }\r\n  onError = err => this.setState({error: true})\r\n  updateItem = () => {\r\n    const {itemId, getData, getImageUrl} = this.props;\r\n    if (!itemId) {\r\n      return\r\n    }\r\n    getData(itemId).then(item => {\r\n\r\n      return this.setState({\r\n        item,\r\n        loading: false,\r\n        image: getImageUrl(item.id)\r\n      })\r\n    }).catch(this.onError)\r\n  }\r\n  componentDidUpdate(prevprops) {\r\n    if (this.props.itemId != prevprops.itemId) {\r\n      this.setState({loading: true})\r\n      this.updateItem();\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const returnDetails = () => {\r\n      let {item: {\r\n          name\r\n        }, image} = this.state;\r\n      return (\r\n        <React.Fragment>\r\n          <div className='wrap'>\r\n            <img className='img' src={image}/>\r\n            <div className='item-list-group'>\r\n              <h1>{name}</h1>\r\n              <ul className='item-details-list'>\r\n                {React\r\n                  .Children\r\n                  .map(this.props.children, (child) => {\r\n                    return React.cloneElement(child, {item})\r\n                  })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n    const {loading, error, item} = this.state\r\n    const content = (!loading && !error)\r\n      ? returnDetails(this.state)\r\n      : null;\r\n    const err = (loading || error)\r\n      ? <Spinner/>\r\n      : null\r\n    return (\r\n      <div className='item-details'>\r\n        {content}\r\n        {err}\r\n      </div>\r\n\r\n    )\r\n  }\r\n}",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":29,"column":11,"nodeType":"65","messageId":"66","endLine":29,"endColumn":21},{"ruleId":"63","severity":1,"message":"67","line":34,"column":11,"nodeType":"65","messageId":"66","endLine":34,"endColumn":24},{"ruleId":"68","severity":1,"message":"69","line":43,"column":27,"nodeType":"70","messageId":"71","endLine":43,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":59,"column":13,"nodeType":"74","endLine":59,"endColumn":47},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'personList' is assigned a value but never used.","Identifier","unusedVar","'starshipsList' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]